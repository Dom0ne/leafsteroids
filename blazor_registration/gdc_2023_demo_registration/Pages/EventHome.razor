@page "/eventHome"
@using MongoDB.Driver
@using MongoDB.Bson
@using gdc_2023_demo_registration.Data

@inject NavigationManager NavigationManager
@inject IMongoCollection<Recording> Recordings
@inject IMongoCollection<Event> Events

<style>
    body {
        background-color: #023430;
    }
</style>

<img src="\mongodb-logo-green-bg.jpg" class="rounded mx-auto d-block" alt="logo">
<div class="card bg-white">
    <article class="card-body mx-auto" style="max-width: 400px;">
        <h2 class="text-center">Event Dashboard</h2>
        <h4 class="card-title mt-3 text-center"><b>@Event.name</b></h4>
    </article>
</div> 

<p></p>
<p></p>
<p></p>

@if (chartUrl.Length == 0)
{
    <p><em>Loading...</em></p>
}
else
{
    <iframe style="background: #21313C;border: none;border-radius: 2px;box-shadow: 0 2px 10px 0 rgba(70, 76, 79, .2);width: 100vw;height: 100vh;" src="@chartUrl"></iframe>
}

@code {

    private string chartUrl = "";
    private string location = "US-CA";
    private string EventId = "mdb-local-2023-socal";

    private Event? Event { get; set; }

    Dictionary<string, string>? queryParameters;

    protected override void OnInitialized()
    {
        try
        {
            var uri = new Uri(NavigationManager.Uri);

            queryParameters = uri.Query.TrimStart('?')
                .Split('&')
                .ToDictionary(
                    x => Uri.UnescapeDataString(x.Split('=')[0]),
                    x => Uri.UnescapeDataString(x.Split('=')[1])
                );

            location = queryParameters["location"];
            EventId = queryParameters["EventId"];

            Event = Events
                .Find(e => e.Id.Equals(EventId))
                .First<Event>();

            Console.WriteLine(location);
            Console.WriteLine(EventId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

        chartUrl = "https://charts.mongodb.com/charts-global_shared-jebkk/embed/dashboards?id=6453fb66-c2fc-4212-8dbd-4ab8365f1ac0&theme=light&autoRefresh=true&maxDataAge=60&showTitleAndDesc=false&scalingWidth=fixed&scalingHeight=fixed";
        chartUrl += "&filter={%27location%27:%27" + location + "%27,%27Event._id%27:%27" + EventId + "%27}";
    }
}
