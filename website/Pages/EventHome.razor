@page "/eventHome"
@using RestSharp
@using website.Data
@using website.Utils
@using dotenv.net

@inject NavigationManager NavigationManager

<style>
    body {
        background-color: #023430;
    }

    .atlascharts_iframe {
        /*background: #21313C; */
        border: none;
        border-radius: 2px;
        /* box-shadow: 0 2px 10px 0 rgba(70, 76, 79, .2); */
        width: 1200px;
        height: 950px;
        margin: auto;
    }
</style>
<a href="\?EventId=@_eventId">
    <img src="\mongodb-logo-green-bg.jpg" class="rounded mx-auto d-block" alt="logo">
</a>
<div class="card" style="max-width:400px;background:yellow;text-align:center">
    <div style="display:inline">
        <a href="https://www.mongodb.com/solutions/solutions-library/gaming-player-profiles-solution" target="_blank">Solution</a>
        &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
        <a href="https://www.mongodb.com/use-cases/gaming" target="_blank">MDB for Gaming</a>
        &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;
        <a href="https://github.com/mongodb-developer/leafsteroids" target="_blank">GitHub</a>
    </div>
</div>
<div class="card bg-white">
    <article class="card-body mx-auto" style="max-width: 400px;">
        <table>
            <tr>
                <td>
                    <div>
                        <img src="@GetQRCodeForCurrentUrl()" class="rounded mx-auto d-block" alt="logo">
                    </div>
                </td>
                <td>
                    @if (Event?.Name != null)
                    {
                        <h2 class="card-title mt-3 text-center">@Event.Name</h2>
                    }
                </td>
            </tr>
        </table>
        <h4 class="card-title mt-3 text-center">
            <h2 class="text-center">Event Dashboard</h2>
        </h4>
    </article>
</div>


@if (_chartUrl.Length == 0)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="row">
        <iframe class="atlascharts_iframe" src="@_chartUrl"></iframe>
    </div>
}

@code {

    private Event? Event { get; set; }
    private string _eventId = string.Empty;
    private string _chartUrl = string.Empty;
    private readonly RestClient _restClient = RestServiceClient.Create();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var queryParameters = UrlHelper.GetParameters(NavigationManager.Uri);

            _eventId = queryParameters[Constants.QueryParameterEventId];
            var eventsFilter = new Dictionary<string, string>
            {
                { "id", _eventId }
            };
            string eventsUrlWithQuery = UrlHelper.BuildUrlWithQuery(Constants.RestServiceEndpointEvents, eventsFilter);
            var events = await _restClient.GetJsonAsync<List<Event>>(eventsUrlWithQuery);
            Event = events.FirstOrDefault();

            DotEnv.Load();
            var envVars = DotEnv.Read();
            var atlasChartIdEvent = envVars["ATLAS_CHART_ID_EVENT"];
            _chartUrl = ChartsUrl.CreateEventUrl(atlasChartIdEvent, Event!.Id!, Event.Location!);
        }
        catch (Exception e)
        {
            // The exception itself can be ignored since the HTML is automatically adjusting to show
            // an `[Unspecified Event]` message when no event was found.
            Console.WriteLine(e.Message);
            Console.WriteLine(e.StackTrace);
        }
    }

    // return current url location
    private string GetQRCodeForCurrentUrl()
    {
        string url = "https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=" +
        NavigationManager.Uri + "?EventId=" + _eventId;
        Console.WriteLine(url);
        return url;
    }
}