name: Deploy the REST service to EC2

on:
  push:
    branches:
      - PROD
      - STAGING

jobs:
  deploy-rest-service:
    runs-on: ubuntu-latest
    steps:

      - name: check out repository
        uses: actions/checkout@v2

      - name: copy files to EC2
        env:
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          PROD_IP: ${{ secrets.PROD_IP }}
          STAGING_IP: ${{ secrets.STAGING_IP }}
        run: |
          echo "$EC2_PRIVATE_KEY" > ec2_private_key.pem
          chmod 400 ec2_private_key.pem
          
          touch ~/.ssh/known_hosts
          ssh-keyscan -H $PROD_IP >> ~/.ssh/known_hosts
          ssh-keyscan -H $STAGING_IP >> ~/.ssh/known_hosts
          
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          if [[ "$BRANCH_NAME" == "PROD" ]]; then
             scp -i ec2_private_key.pem -r rest_service ubuntu@$PROD_IP:/home/ubuntu/rest_service
          elif [[ "$BRANCH_NAME" == "STAGING" ]]; then
             scp -i ec2_private_key.pem -r rest_service ubuntu@$STAGING_IP:/home/ubuntu/rest_service
          fi

#
#      - name: deploy game server
#        uses: appleboy/scp-action@v0.1.4
#        with:
#          host: ${{ secrets.GAME_SERVER_IP }}
#          username: ${{ secrets.GAME_SERVER_USERNAME }}
#          password: ${{ secrets.GAME_SERVER_PASSWORD }}
#          source: "game_server/*"
#          target: /home/ubuntu
#
#      - name: Restart game server service
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ secrets.GAME_SERVER_IP }}
#          username: ${{ secrets.GAME_SERVER_USERNAME }}
#          password: ${{ secrets.GAME_SERVER_PASSWORD }}
#          script: sudo systemctl restart game_server
